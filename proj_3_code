#include<iostream>
#include<string>
#include<iomanip>
using namespace std;
struct inst {
	string t;
	string rd;
	string rs1;
	int i;
	string rs2;
	string name;
	bool d;
};
struct doit {
	string rd;
	string rs1;
	string rs2;
	bool dornot;
};
int now = 0;
int main() {
	string types[5] = { "ADD","ADDI","SUB","MUL","DIV" }, line; inst insts[100];
	int F1 = 0, F2 = 2, F3 = 4, F4 = 6, F5 = 8, j = 0, o = 8; doit R1, R2, R3, R4, R5;
	int F11 = 0, F22 = 2, F33 = 4, F44 = 6, F55 = 8;
	while (o > 0) {
		getline(cin, line);
		if (line[0] == '\n')
			break;
		int i = 0,type;
		while (line[i] != ' ') {
			insts[j].t += line[i];
			i++;
		}i++;
		for (int k = 0; k < 5; k++) {
			if (types[k] == insts[j].t) {
				type = k;
				break;
			}
		}
		if (type == 1) {
			while (line[i] != '\,') {
				insts[j].rd += line[i];
				i++;
			}i++;
			while (line[i] != '\,') {
				insts[j].rs1 += line[i];
				i++;
			}i+=2;
			string integer;
			while (line[i] != '\0') {
				integer += line[i];	
				i++;
			}
			insts[j].i = stoi(integer);
		}
		else {
			while (line[i] != '\,') {
				insts[j].rd += line[i];
				i++;
			}i++;
			while (line[i] != '\,') {
				insts[j].rs1 += line[i];
				i++;
			}i+=2; 
			while (line[i] != '\0') {
				insts[j].rs2 += line[i];
				i++;
			}
		}
		j++; o--;
	}
	int y = 100, cycle = 0;
	string f1 = "", f2 = "", f3 = "", f4 = "", f5 = "";
	int RS1 = -1, RS2 = -1, RS3 = -1, RS4 = -1, RS5 = -1;
	while (y > 0) {
		cout << "\nCycle = " << cycle + 1 << endl;
		cout << " _ RF __\n"
			<< "F1 |" << F1 << " |\n"
			<< "F2 |" << F2 << " |\n"
			<< "F3 |" << F3 << " |\n"
			<< "F4 |" << F4 << " |\n"
			<< "F5 |" << F5 << " |\n"
			<< "------ -\n";
		if (insts[cycle].rd == "F1") {
			if (insts[cycle].t == "ADD"|| insts[cycle].t == "ADDI"|| insts[cycle].t == "SUB") {
				if (RS1 == -1) {
					RS1 = cycle;
					f1 = "RS1";
					insts[cycle].name= "RS1";
					R1.rd = insts[cycle].rd;
					R1.rs1 = insts[cycle].rs1;
					R1.rs2 = insts[cycle].rs2;
				}
				else if (RS2 == -1) {
					RS2 = cycle;
					f1 = "RS2";
					insts[cycle].name = "RS2";
					R2.rd = insts[cycle].rd;
					R2.rs1 = insts[cycle].rs1;
					R2.rs2 = insts[cycle].rs2;
				}
				else if (RS3 == -1) {
					RS3 = cycle;
					f1 = "RS3";
					insts[cycle].name = "RS3";
					R3.rd = insts[cycle].rd;
					R3.rs1 = insts[cycle].rs1;
					R3.rs2 = insts[cycle].rs2;
				}
			}
			else if (insts[cycle].t == "MUL" || insts[cycle].t == "DIV") {
				if (RS4 == -1) {
					RS4 = cycle;
					f1 = "RS4";
					insts[cycle].name = "RS4";
					R4.rd = insts[cycle].rd;
					R4.rs1 = insts[cycle].rs1;
					R4.rs2 = insts[cycle].rs2;
				}
				else if (RS5 == -1) {
					RS5 = cycle;
					f1 = "RS5";
					insts[cycle].name = "RS5";
					R5.rd = insts[cycle].rd;
					R5.rs1 = insts[cycle].rs1;
					R5.rs2 = insts[cycle].rs2;
				}
			}
		}
		else if (insts[cycle].rd == "F2") {
			if (insts[cycle].t == "ADD" || insts[cycle].t == "ADDI" || insts[cycle].t == "SUB") {
				if (RS1 == -1) {
					RS1 = cycle;
					f2 = "RS1";
					insts[cycle].name = "RS1";
					R1.rd = insts[cycle].rd;
					R1.rs1 = insts[cycle].rs1;
					R1.rs2 = insts[cycle].rs2;
				}
				else if (RS2 == -1) {
					RS2 = cycle;
					f2 = "RS2";
					insts[cycle].name = "RS2";
					R2.rd = insts[cycle].rd;
					R2.rs1 = insts[cycle].rs1;
					R2.rs2 = insts[cycle].rs2;
				}
				else if (RS3 == -1) {
					RS3 = cycle;
					f2 = "RS3";
					insts[cycle].name = "RS3";
					R3.rd = insts[cycle].rd;
					R3.rs1 = insts[cycle].rs1;
					R3.rs2 = insts[cycle].rs2;
				}
			}
			else if (insts[cycle].t == "MUL" || insts[cycle].t == "DIV") {
				if (RS4 == -1) {
					RS4 = cycle;
					f2 = "RS4";
					insts[cycle].name = "RS4";
					R4.rd = insts[cycle].rd;
					R4.rs1 = insts[cycle].rs1;
					R4.rs2 = insts[cycle].rs2;
				}
				else if (RS5 == -1) {
					RS5 = cycle;
					f2 = "RS5";
					insts[cycle].name = "RS5";
					R5.rd = insts[cycle].rd;
					R5.rs1 = insts[cycle].rs1;
					R5.rs2 = insts[cycle].rs2;
				}
			}
		}
		else if (insts[cycle].rd == "F3") {
			if (insts[cycle].t == "ADD" || insts[cycle].t == "ADDI" || insts[cycle].t == "SUB") {
				if (RS1 == -1) {
					RS1 = cycle;
					f3 = "RS1";
					insts[cycle].name = "RS1";
					R1.rd = insts[cycle].rd;
					R1.rs1 = insts[cycle].rs1;
					R1.rs2 = insts[cycle].rs2;
				}
				else if (RS2 == -1) {
					RS2 = cycle;
					f3 = "RS2";
					insts[cycle].name = "RS2";
					R2.rd = insts[cycle].rd;
					R2.rs1 = insts[cycle].rs1;
					R2.rs2 = insts[cycle].rs2;
				}
				else if (RS3 == -1) {
					RS3 = cycle;
					f3 = "RS3";
					insts[cycle].name = "RS3";
					R3.rd = insts[cycle].rd;
					R3.rs1 = insts[cycle].rs1;
					R3.rs2 = insts[cycle].rs2;
				}
			}
			else if (insts[cycle].t == "MUL" || insts[cycle].t == "DIV") {
				if (RS4 == -1) {
					RS4 = cycle;
					f3 = "RS4";
					insts[cycle].name = "RS4";
					R4.rd = insts[cycle].rd;
					R4.rs1 = insts[cycle].rs1;
					R4.rs2 = insts[cycle].rs2;
				}
				else if (RS5 == -1) {
					RS5 = cycle;
					f3 = "RS5";
					insts[cycle].name = "RS5";
					R5.rd = insts[cycle].rd;
					R5.rs1 = insts[cycle].rs1;
					R5.rs2 = insts[cycle].rs2;
				}
			}
		}
		else if (insts[cycle].rd == "F4") {
			if (insts[cycle].t == "ADD" || insts[cycle].t == "ADDI" || insts[cycle].t == "SUB") {
				if (RS1 == -1) {
					RS1 = cycle;
					f4 = "RS1";
					insts[cycle].name = "RS1";
					R1.rd = insts[cycle].rd;
					R1.rs1 = insts[cycle].rs1;
					R1.rs2 = insts[cycle].rs2;
				}
				else if (RS2 == -1) {
					RS2 = cycle;
					f4 = "RS2";
					insts[cycle].name = "RS2";
					R2.rd = insts[cycle].rd;
					R2.rs1 = insts[cycle].rs1;
					R2.rs2 = insts[cycle].rs2;
				}
				else if (RS3 == -1) {
					RS3 = cycle;
					f4 = "RS3";
					insts[cycle].name = "RS3";
					R3.rd = insts[cycle].rd;
					R3.rs1 = insts[cycle].rs1;
					R3.rs2 = insts[cycle].rs2;
				}
			}
			else if (insts[cycle].t == "MUL" || insts[cycle].t == "DIV") {
				if (RS4 == -1) {
					RS4 = cycle;
					f4 = "RS4";
					insts[cycle].name = "RS4";
					R4.rd = insts[cycle].rd;
					R4.rs1 = insts[cycle].rs1;
					R4.rs2 = insts[cycle].rs2;
				}
				else if (RS5 == -1) {
					RS5 = cycle;
					f4 = "RS5";
					insts[cycle].name = "RS5";
					R5.rd = insts[cycle].rd;
					R5.rs1 = insts[cycle].rs1;
					R5.rs2 = insts[cycle].rs2;
				}
			}
		}
		else if (insts[cycle].rd == "F5") {
			if (insts[cycle].t == "ADD" || insts[cycle].t == "ADDI" || insts[cycle].t == "SUB") {
				if (RS1 == -1) {
					RS1 = cycle;
					f5 = "RS1";
					insts[cycle].name = "RS1";
					R1.rd = insts[cycle].rd;
					R1.rs1 = insts[cycle].rs1;
					R1.rs2 = insts[cycle].rs2;
				}
				else if (RS2 == -1) {
					RS2 = cycle;
					f5 = "RS2";
					insts[cycle].name = "RS2";
					R2.rd = insts[cycle].rd;
					R2.rs1 = insts[cycle].rs1;
					R2.rs2 = insts[cycle].rs2;
				}
				else if (RS3 == -1) {
					RS3 = cycle;
					f5 = "RS3"; 
					insts[cycle].name = "RS3";
					R3.rd = insts[cycle].rd;
					R3.rs1 = insts[cycle].rs1;
					R3.rs2 = insts[cycle].rs2;
				}
			}
			else if (insts[cycle].t == "MUL" || insts[cycle].t == "DIV") {
				if (RS4 == -1) {
					RS4 = cycle;
					f5 = "RS4";
					insts[cycle].name = "RS4";
					R4.rd = insts[cycle].rd;
					R4.rs1 = insts[cycle].rs1;
					R4.rs2 = insts[cycle].rs2;
				}
				else if (RS5 == -1) {
					RS5 = cycle;
					f5 = "RS5";
					insts[cycle].name = "RS5";
					R5.rd = insts[cycle].rd;
					R5.rs1 = insts[cycle].rs1;
					R5.rs2 = insts[cycle].rs2;
				}
			}
		}
		cout << "\n _ RAT __\n"
			<< "F1 |" << f1 << " |\n"
			<< "F2 |" << f2 << " |\n"
			<< "F3 |" << f3 << " |\n"
			<< "F4 |" << f4 << " |\n"
			<< "F5 |" << f5 << " |\n"
			<< "--------\n";
		
		cout << "\n_ RS _________________\n";
		if (RS1 != -1) {
			cout << "RS1 |  ";
			if (insts[RS1].t == "ADDI" || insts[RS1].t == "ADD")
				cout << "+";
			else if (insts[RS1].t == "SUB")
				cout << "-";
			else if (insts[RS1].t == "MUL")
				cout << "*";
			else if (insts[RS1].t == "DIV")
				cout << "/";
			cout << "|";
			if (insts[RS1].rs1 == " F1") {
				if (f1 != "")
					cout << f1;
				else
					cout << F1;
			}
			else if (insts[RS1].rs1 == " F2") {
				if (f2 != "")
					cout << f2;
				else
					cout << F2;
			}
			else if (insts[RS1].rs1 == " F3") {
				if (f3 != "")
					cout << f3;
				else
					cout << F3;
			}
			else if (insts[RS1].rs1 == " F4") {
				if (f4 != "")
					cout << f4;
				else
					cout << F4;
			}
			else if (insts[RS1].rs1 == " F5") {
				if (f5 != "")
					cout << f5;
				else
					cout << F5;
			}
			cout << " | ";
			if(insts[RS1].t == "ADDI")
				cout << insts[RS1].i << " | \n";
			else {
				if (insts[RS1].rs2 == " F1") {
					if (f1 != "")
						cout << f1;
					else
						cout << F1;
				}
				else if (insts[RS1].rs2 == " F2") {
					if (f2 != "")
						cout << f2;
					else
						cout << F2;
				}
				else if (insts[RS1].rs2 == " F3") {
					if (f3 != "")
						cout << f3;
					else
						cout << F3;
				}
				else if (insts[RS1].rs2 == " F4") {
					if (f4 != "")
						cout << f4;
					else
						cout << F4;
				}
				else if (insts[RS1].rs2 == " F5") {
					if (f5 != "")
						cout << f5;
					else
						cout << F5;
				}
			}
		}
		else {
			cout << "RS1 |      |      |      |\n";
		}
		if (RS2 != -1) {
			cout << "RS2 |  ";
			if (insts[RS2].t == "ADDI" || insts[RS2].t == "ADD")
				cout << "+";
			else if (insts[RS2].t == "SUB")
				cout << "-";
			else if (insts[RS2].t == "MUL")
				cout << "*";
			else if (insts[RS2].t == "DIV")
				cout << "/";
			cout << "|";
			if (insts[RS2].rs1 == "F1") {
				if (f1 != "")
					cout << f1;
				else
					cout << F1;
			}
			else if (insts[RS2].rs1 == " F2") {
				if (f2 != "")
					cout << f2;
				else
					cout << F2;
			}
			else if (insts[RS2].rs1 == " F3") {
				if (f3 != "")
					cout << f3;
				else
					cout << F3;
			}
			else if (insts[RS2].rs1 == " F4") {
				if (f4 != "")
					cout << f4;
				else
					cout << F4;
			}
			else if (insts[RS2].rs1 == " F5") {
				if (f5 != "")
					cout << f5;
				else
					cout << F5;
			}
			cout << " | ";
			if (insts[RS2].t == "ADDI")
				cout << insts[RS2].i << " | \n";
			else {
				if (insts[RS2].rs2 == " F1") {
					if (f1 != "")
						cout << f1;
					else
						cout << F1;
				}
				else if (insts[RS2].rs2 == " F2") {
					if (f2 != "")
						cout << f2;
					else
						cout << F2;
				}
				else if (insts[RS2].rs2 == " F3") {
					if (f3 != "")
						cout << f3;
					else
						cout << F3;
				}
				else if (insts[RS2].rs2 == " F4"|| insts[RS2].rs2 == "F4") {
					if (f4 != "")
						cout << f4;
					else
						cout << F4;
				}
				else if (insts[RS2].rs2 == " F5") {
					if (f5 != "")
						cout << f5;
					else
						cout << F5;
				}
				cout << " | \n";
			}
		}
		else {
			cout << "RS2 |      |      |      |\n";
		}
		if (RS3 != -1) {
			cout << "RS3 |  ";
			if (insts[RS3].t == "ADDI" || insts[RS3].t == "ADD")
				cout << "+";
			else if (insts[RS3].t == "SUB")
				cout << "-";
			else if (insts[RS3].t == "MUL")
				cout << "*";
			else if (insts[RS3].t == "DIV")
				cout << "/";
			cout << "|";
			if (insts[RS3].rs1 == " F1") {
				if (f1 != "")
					cout << f1;
				else
					cout << F1;
			}
			else if (insts[RS3].rs1 == " F2") {
				if (f2 != "")
					cout << f2;
				else
					cout << F2;
			}
			else if (insts[RS3].rs1 == " F3") {
				if (f3 != "")
					cout << f3;
				else
					cout << F3;
			}
			else if (insts[RS3].rs1 ==  " F4") {
				if (f4 != "")
					cout << f4;
				else
					cout << F4;
			}
			else if (insts[RS3].rs1 == " F5") {
				if (f5 != "")
					cout << f5;
				else
					cout << F5;
			}
			cout << " | ";
			if (insts[RS3].t == "ADDI")
				cout << insts[RS3].i << " | \n";
			else {
				if (insts[RS3].rs2 == " F1") {
					if (f1 != "")
						cout << f1;
					else
						cout << F1;
				}
				else if (insts[RS3].rs2 == " F2") {
					if (f2 != "")
						cout << f2;
					else
						cout << F2;
				}
				else if (insts[RS3].rs2 == " F3") {
					if (f3 != "")
						cout << f3;
					else
						cout << F3;
				}
				else if (insts[RS3].rs2 == " F4") {
					if (f4 != "")
						cout << f4;
					else
						cout << F4;
				}
				else if (insts[RS3].rs2 == " F5") {
					if (f5 != "")
						cout << f5;
					else
						cout << F5;
				}
			}
		}
		else {
			cout << "RS3 |      |      |      |\n";
		}
		if (cycle - 1 != -1) {
			
			}
			cout<< "----------------------\n"
			<< "BUFFER: empty\n";
			cout << "_ RS _________________\n";
			if (RS4 != -1) {
				cout << "RS4 |  ";
				if (insts[RS4].t == "ADDI" || insts[RS4].t == "ADD")
					cout << "+";
				else if (insts[RS4].t == "SUB")
					cout << "-";
				else if (insts[RS4].t == "MUL")
					cout << "*";
				else if (insts[RS4].t == "DIV")
					cout << "/";
				cout << "|";
				if (insts[RS4].rs1 == " F1") {
					if (f1 != "")
						cout << f1;
					else
						cout << F1;
				}
				else if (insts[RS4].rs1 == " F2") {
					if (f2 != "")
						cout << f2;
					else
						cout << F2;
				}
				else if (insts[RS4].rs1 == " F3") {
					if (f3 != "")
						cout << f3;
					else
						cout << F3;
				}
				else if (insts[RS4].rs1 == " F4") {
					if (f4 != "")
						cout << f4;
					else
						cout << F4;
				}
				else if (insts[RS4].rs1 == " F5") {
					if (f5 != "")
						cout << f5;
					else
						cout << F5;
				}
				cout << " | ";
				cout << "|";
				if (insts[RS4].rs2 == " F1") {
					if (f1 != "")
						cout << f1;
					else
						cout << F1;
				}
				else if (insts[RS4].rs2 == " F2") {
					if (f2 != "")
						cout << f2;
					else
						cout << F2;
				}
				else if (insts[RS4].rs2 == " F3") {
					if (f3 != "")
						cout << f3;
					else
						cout << F3;
				}
				else if (insts[RS4].rs2 == " F4") {
					if (f4 != "")
						cout << f4;
					else
						cout << F4;
				}
				else if (insts[RS4].rs2 == " F5") {
					if (f5 != "")
						cout << f5;
					else
						cout << F5;
				}
				cout << " | \n";
			}
			else {
				cout << "RS4 |      |      |      |\n";
			}
		if (RS5 != -1) {
			cout << "RS5 |  ";
			if (insts[RS5].t == "ADDI" || insts[RS5].t == "ADD")
				cout << "+";
			else if (insts[RS5].t == "SUB")
				cout << "-";
			else if (insts[RS5].t == "MUL")
				cout << "*";
			else if (insts[RS5].t == "DIV")
				cout << "/";
			cout << "|";
			if (insts[RS5].rs1 == " F1") {
				if (f1 != "")
					cout << f1;
				else
					cout << F1;
			}
			else if (insts[RS5].rs1 == " F2") {
				if (f2 != "")
					cout << f2;
				else
					cout << F2;
			}
			else if (insts[RS5].rs1 == " F3") {
				if (f3 != "")
					cout << f3;
				else
					cout << F3;
			}
			else if (insts[RS5].rs1 == " F4") {
				if (f4 != "")
					cout << f4;
				else
					cout << F4;
			}
			else if (insts[RS5].rs1 == " F5") {
				if (f5 != "")
					cout << f5;
				else
					cout << F5;
			}
			cout << " |";
			cout << "|";
			if (insts[RS5].rs2 == " F1") {
				if (f1 != "")
					cout << f1;
				else
					cout << F1;
			}
			else if (insts[RS5].rs2 == " F2") {
				if (f2 != "")
					cout << f2;
				else
					cout << F2;
			}
			else if (insts[RS5].rs2 == " F3") {
				if (f3 != "")
					cout << f3;
				else
					cout << F3;
			}
			else if (insts[RS5].rs2 == " F4") {
				if (f4 != "")
					cout << f4;
				else
					cout << F4;
			}
			else if (insts[RS5].rs2 == " F5") {
				if (f5 != "")
					cout << f5;
				else
					cout << F5;
			}
			cout << " | \n";
		}
		else {
			cout << "RS5 |      |      |      |\n";
		}
			cout<< "----------------------\n"
			<< "BUFFER: empty\n";
			y--; cycle++;
	}
}
